{"version":3,"sources":["styles/StartScreenStyles.js","screens/StartScreen.js","hooks/useOptionsState.js","context/options.context.js","styles/sizes.js","styles/ButtonsStyles.js","components/Buttons.js","components/TabPanel.js","styles/FormStyles.js","components/Form.js","styles/MainDrawerStyles.js","components/MainDrawer.js","utils.js","styles/TooltipStyles.js","components/Tooltip.js","hooks/useHeightAnimHook.js","styles/GameScreenStyles.js","screens/GameScreen.js","App.js","index.js"],"names":["styles","root","position","overflow","height","width","color","borderRadius","text1","left","top","fontSize","textShadow","transformOrigin","transform","animation","text2","background","bottom","opacity","loaderContainer","textAlign","loaderTitle","paddingBottom","letterSpacing","loader","border","boxShadow","withStyles","classes","history","className","onAnimationEnd","push","useOptionsState","init","useState","maxWrong","setMaxWrong","name","setName","changeName","editedName","changeMaxWrong","editedMaxWrong","initData","JSON","parse","window","localStorage","getItem","theme","OptionsContext","createContext","OptionsProvider","props","options","useEffect","setItem","stringify","Provider","value","children","sizes","up","size","md","down","xs","sm","lg","xlg","marginTop","button","backgroundColor","outline","margin","cursor","transition","content","display","answer","right","justifyContent","zIndex","guessed","handleGuess","isWinner","handleAnswerClick","evt","target","disabled","split","map","letter","idx","Fragment","clsx","onClick","has","toUpperCase","style","length","TabPanel","index","role","hidden","id","dialog","borderTop","borderBottom","overflowX","formTitle","fontWeight","marginBottom","form","padding","bottomBorder","marks","label","showForm","closeForm","show","tabIndex","useContext","setValue","inputText","setInputText","sliderValue","setSliderValue","handleSubmit","preventDefault","stopPropagation","Dialog","open","Paper","square","Tabs","indicatorColor","textColor","onChange","newValue","Tab","noValidate","autoComplete","onSubmit","TextField","inputRef","input","focus","Button","type","variant","Slider","defaultValue","step","min","max","valueLabelDisplay","drawerWidth","appBar","drawer","transitions","create","easing","sharp","duration","leavingScreen","paddingLeft","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","fontFamily","listItem","divider","drawerOpen","spacing","drawerClose","toolbar","alignItems","mixins","widthTheme","useTheme","setOpen","setShowForm","handleShowingForm","changeDifficulty","AppBar","Toolbar","IconButton","edge","Drawer","paper","direction","Divider","List","ListItem","ListItemIcon","ListItemText","primary","arrCategory","el","trim","arrConstraint","random","arr","Math","floor","genBackground","arrLength","topSatur","lowSatur","randPercArr","Array","fill","_","ceil","linearBackground","nextPercent","randSaturation","join","tooltip","tooltipArrow","CustomTooltip","title","isDisabled","otherProps","tooltipOpen","setTooltipOpen","handleTooltip","bool","Tooltip","onMouseEnter","onMouseOut","arrow","placement","defaultProps","useHeightAnimHook","fetchedData","lostGame","setHeight","ref","useRef","current","scrollHeight","mainContainer","maxWidth","textTransform","headerContainer","main","borderColor","textField","borderBottomColor","buttonsContainer","message","fontStyle","definitionsAtEndGame","nWrong","setNWrong","Set","guessedLtr","setGuessedLtr","setIsWinner","setLostGame","setBackground","msg","syllables","hint","setHint","constraint","category","tags","def","numSyllables","setFetchedData","getData","fetch","then","res","json","data","rand","word","defs","catch","err","console","log","guessedWord","guessedLetters","genGuessedWord","fetchHint","nums","count","randWord","add","updatedDisabled","from","handleLeft","handleRight","updateStateOnEvent","prevSt","includes","capitalizedConstraint","charAt","slice","substring","onKeyDown","key","setTimeout","placeholder","pop","allDefinitions","i","definitions","App","exact","path","component","StartScreen","GameScreen","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.a74cfa3e.chunk.js","sourcesContent":["const styles = {\r\n    root: {\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        height: '100vh',\r\n        width: '100vw',\r\n        color: 'white',\r\n        borderRadius: '10px solid red'\r\n    },\r\n    text1: {\r\n        position: 'absolute',\r\n        left: '10%',\r\n        top: '20%',\r\n        fontSize: '4.1rem',\r\n        width: '80vw',\r\n        height: '100vh',\r\n        color: 'grey',\r\n        textShadow: '1px 1px 1px rgba(0,0,0,.7)',\r\n        transformOrigin: 'top left',\r\n        transform: 'scale(0) rotate(10deg) translate(70%, 30%)',\r\n        animation: '$textSlideIn 2.7s 3.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards'\r\n    },\r\n    text2: {\r\n        position: 'absolute',\r\n        left: '10%',\r\n        top: '30%',\r\n        fontSize: '4rem',\r\n        width: '80vw',\r\n        height: '100vh',\r\n        color: 'grey',\r\n        textShadow: '1px 1px 1px rgba(0,0,0,.7)',\r\n        transformOrigin: 'top left',\r\n        transform: 'scale(0) rotate(10deg) translate(-70%, -30%)',\r\n        animation: '$textSlideIn 2.7s 3.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards'\r\n    },\r\n    \"@keyframes textSlideIn\": {\r\n        \"37%\": {\r\n            transform: 'scale(1)'\r\n        },\r\n        \"100%\": {\r\n            transform: 'scale(1)'\r\n        },\r\n    },\r\n    background: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        width: '90px',\r\n        height: '50px',\r\n        borderRadius: '90%',\r\n        opacity: 0,\r\n        background: 'rgba(0,0,0,.85)',\r\n        animation: '$scale-bg 3s forwards',\r\n    },\r\n    loaderContainer: {\r\n        position: 'absolute',\r\n        bottom: '51%',\r\n        left: '50%',\r\n        textAlign: 'center',\r\n        transform: 'translate(-50%,-50%) scale(0)',\r\n        animation: '$scale-loader 4.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards',\r\n    },\r\n    loaderTitle: {\r\n        color: 'grey',\r\n        textShadow: '1px 1px 1px rgba(0,0,0,.4)',\r\n        fontSize: '3rem',\r\n        paddingBottom: '1.1rem',\r\n        letterSpacing: '3px'\r\n    },\r\n    loader: {\r\n        borderRadius: '10px',\r\n        border: '1px solid black',\r\n        height: '3px',\r\n        width: '31rem',\r\n        '& div': {\r\n            background: 'linear-gradient(45deg, RebeccaPurple  30%, MediumSlateBlue 60%,  MediumSpringGreen 100%)',\r\n            height: '100%',\r\n            width: '0',\r\n            boxShadow: '0 0 1vw #1041ff, 0 0 3vw #1041ff, 0 0 8vw #1041ff, 0 0 8vw #1041ff, 0 0 0.4vw #8bfdfe, -0.1vw 0.1vw 0.1vw #147280, -0.1vw -0.1vw 0.1vw #147280',\r\n            animation: '$loading-effect 4s cubic-bezier(0.34, 1.56, 0.64, 1) 0.3s',\r\n        }\r\n    },\r\n    \"@keyframes scale-bg\": {\r\n        \"100%\": {\r\n            opacity: 1,\r\n            transform: 'scale(100)',\r\n            background: 'rgba(0,0,0,.85)',\r\n        },\r\n    },\r\n    \"@keyframes scale-loader\": {\r\n        \"5%\": { transform: 'translate(-50%,-50%) scale(1)' },\r\n        \"80%\": { opacity: 1 },\r\n        \"100%\": { opacity: 0, transform: 'translate(-50%,-50%) scale(1)' }\r\n    },\r\n    \"@keyframes loading-effect\": {\r\n        \"40%\": { width: '60%' },\r\n        \"45%\": { width: '55%' },\r\n        \"100%\": { width: '97%', transform: 'scale(1)' }\r\n    },\r\n};\r\n\r\nexport default styles;","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from '../styles/StartScreenStyles'\r\n\r\n\r\nconst StartScreen = ({ classes, history }) => {\r\n\r\n    const handleEndOfAnimation = () => history.push('/game')\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.background} />\r\n            <div className={classes.text1} >\r\n                Welcome to the \"Guess The Word\" game.\r\n            </div>\r\n            <div className={classes.text2} onAnimationEnd={handleEndOfAnimation}>\r\n                The game is about to start now!\r\n            </div>\r\n            <div className={classes.loaderContainer}>\r\n                <div className={classes.loaderTitle}>Guess The Word</div>\r\n                <div className={classes.loader}>\r\n                    <div />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(StartScreen);\r\n","import { useState } from 'react';\r\n\r\n\r\nconst useOptionsState = (init) => {\r\n    const [maxWrong, setMaxWrong] = useState(init.maxWrong)\r\n    const [name, setName] = useState(init.name)\r\n\r\n    return {\r\n        name,\r\n        changeName: (editedName) => setName(editedName),\r\n        maxWrong,\r\n        changeMaxWrong: (editedMaxWrong) => setMaxWrong(editedMaxWrong),\r\n    }\r\n}\r\n\r\nexport default useOptionsState","import React, { createContext, useEffect } from 'react';\r\nimport useOptionsState from '../hooks/useOptionsState'\r\n\r\n// Set local storage\r\nconst initData = JSON.parse(window.localStorage.getItem('storageData')) || { name: 1, maxWrong: 4, theme: 'dark' }\r\n\r\nexport const OptionsContext = createContext();\r\n\r\nexport function OptionsProvider(props) {\r\n    // useOptionsState = { name, maxWrong, editName, editMaxWrong }\r\n    const options = useOptionsState(initData)\r\n    const { name, maxWrong } = options;\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('storageData', JSON.stringify({ name, maxWrong }))\r\n    }, [name, maxWrong])\r\n\r\n    return (\r\n        <OptionsContext.Provider value={options}>\r\n            {props.children}\r\n        </OptionsContext.Provider>\r\n    )\r\n}","const sizes = {\r\n    up(size) {\r\n        const sizes = {\r\n            md: '800px',\r\n        }\r\n        return `@media (min-width:${sizes[size]})`\r\n    },\r\n    down(size) {\r\n        const sizes = {\r\n            xs: '540px',\r\n            sm: '650px',\r\n            md: '800px',\r\n            lg: '950px',\r\n            xlg: '1350px'\r\n        }\r\n        return `@media (max-width:${sizes[size]})`\r\n    }\r\n}\r\n\r\nexport default sizes;","import sizes from './sizes'\r\n\r\nconst styles = {\r\n    root: {\r\n        marginTop: '2.5rem',\r\n    },\r\n    button: {\r\n        fontSize: '2.2rem',\r\n        width: '5.7rem',\r\n        height: '4.7rem',\r\n        backgroundColor: '#3f51b5',\r\n        color: 'white',\r\n        borderRadius: '12%',\r\n        outline: 'none',\r\n        border: 'none',\r\n        margin: '3px',\r\n        transform: 'skew(-10deg) rotate(-3deg)',\r\n        boxShadow: '1px 1px 1px aqua, 0 0 1px 1px rgba(255,255,255,.9), 2px 2px 2px 2px black',\r\n        cursor: 'pointer',\r\n        transition: '1s cubic-bezier(0.34, 1.56, 0.64, 1)',\r\n        [sizes.down('md')]: {\r\n            width: '4.5rem', height: '3.5rem'\r\n        },\r\n        '&.btn-fj::after': {\r\n            content: '\"\"',\r\n            display: 'block',\r\n            height: '1px',\r\n            width: '2rem',\r\n            backgroundColor: 'white',\r\n            margin: '0 auto',\r\n            [sizes.down('xs')]: { display: 'none' },\r\n        },\r\n        '&:disabled': {\r\n            background: 'rgba(0,0,0,.1)'\r\n        },\r\n        '&:hover': {\r\n            transform: 'skew(-40deg) rotateY(40deg) rotateX(30deg)',\r\n            boxShadow: '2px 2px 1px 0px aqua, 0 1px 2px white, inset -1px -1px 3px aqua',\r\n            color: 'rgb(190, 255, 255)',\r\n            textShadow: '2px 2px #1f36b4, 2px 2px 2px aqua, 2px 2px 12px aqua',\r\n        }\r\n    },\r\n    answer: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: '10%',\r\n        display: 'flex',\r\n        width: 'calc(100% - 180px)',\r\n        justifyContent: 'space-between',\r\n        margin: '0 auto',\r\n        '& button': {\r\n            fontSize: '4rem',\r\n            width: '10rem',\r\n            height: '8.5rem',\r\n            boxShadow: '2px 1px 1px 0px aqua, 0 1px 2px white, inset -1px -1px 0 1px aqua, inset 1px 1px 1px aqua',\r\n            color: 'rgb(190, 255, 255)',\r\n            textShadow: '2px 2px #1f36b4, 2px 2px 2px aqua, 2px 2px 12px aqua',\r\n            zIndex: 9999,\r\n            '&:hover': {\r\n                boxShadow: '1px 1px 0px 1px aqua, 0 1px 2px white, inset -1px -1px 1px aqua',\r\n                textShadow: '1px 1px #1f36b4, 2px 2px 1px aqua, 2px 2px 12px aqua',\r\n                color: 'rgb(160, 255, 255)',\r\n            },\r\n            '&:disabled': {\r\n                background: 'rgba(63, 81, 181,.5)'\r\n            },\r\n        },\r\n    },\r\n}\r\n\r\nexport default styles;","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport styles from '../styles/ButtonsStyles'\r\n\r\n\r\nconst Buttons = ({ guessed, handleGuess, classes, answer, isWinner }) => {\r\n\r\n    // Change size of displayed buttons, depending of how long the answer is\r\n    const sizeOfButtons = () => (\r\n        answer.length < 7 ? 19 :\r\n            answer.length < 11 ? 16 : 14\r\n    )\r\n    const handleAnswerClick = (evt) => evt.target.disabled = true\r\n\r\n    // Render animated correct answer (displayed if player guessed all correct letters)\r\n    const renderAnswerWord = () => {\r\n        return (\r\n            <div className={classes.answer}>\r\n                {answer.split('').map((letter, idx) => (\r\n                    <button\r\n                        className={clsx(classes.button)}\r\n                        key={idx}\r\n                        onClick={handleAnswerClick}\r\n                        style={{\r\n                            animation: `slide ${(idx + 22) * 0.4}s forwards cubic-bezier(0.34, 1.56, 0.64, 1)`,\r\n                            transform: `skew(-40deg) rotateY(50deg) rotateX(30deg) scale(${(idx + sizeOfButtons()) * 0.12}`,\r\n                        }}\r\n                    > {letter.toUpperCase()}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {'qwertyuiopasdfghjkl;zxcvbnm'.split('').map((letter, idx) => (\r\n                <React.Fragment key={letter}>\r\n                    <button\r\n                        className={clsx(classes.button, (idx === 13 || idx === 16) && 'btn-fj')}\r\n                        value={letter}\r\n                        onClick={handleGuess}\r\n                        disabled={guessed.has(letter)}\r\n                    > {letter.toUpperCase()}\r\n                    </button>\r\n                    {(idx === 9 || idx === 19) && <br />}\r\n                </React.Fragment>\r\n            ))}\r\n            {isWinner && renderAnswerWord()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Buttons)\r\n\r\n","const TabPanel = ({ children, value, index }) => (\r\n    <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`tabpanel-${index}`}\r\n        aria-labelledby={`tab-${index}`}\r\n    >\r\n        {value === index && (\r\n            <div>{children}</div>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default TabPanel","const styles = {\r\n    dialog: {\r\n        borderTop: '2px solid #3f51b5',\r\n        borderBottom: '2px solid #3f51b5',\r\n        // Avoid showing scroll at form animation\r\n        '& #tabpanel-1': { overflowX: 'hidden' },\r\n        '& .tab': {\r\n            fontSize: '1.4rem'\r\n        }\r\n    },\r\n    formTitle: {\r\n        fontWeight: '400',\r\n        fontSize: '2.1rem',\r\n        marginBottom: '0.9rem'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        padding: '2rem',\r\n        borderRadius: '5px',\r\n        '& input': {\r\n            width: '20rem',\r\n            fontSize: '1.8rem',\r\n        },\r\n        '& .btns-container': {\r\n            textAlign: 'right',\r\n            '& button': {\r\n                fontSize: '1rem',\r\n                marginTop: '0.3rem',\r\n            },\r\n        },\r\n\r\n        '&.slideLeft': {\r\n            animation: '$slideLeft .5s'\r\n        },\r\n        '&.slideRight': {\r\n            animation: '$slideRight .5s'\r\n        },\r\n    },\r\n    \"@keyframes slideLeft\": {\r\n        \"0%\": {\r\n            transform: 'translate(-100%)',\r\n            background: 'lavender'\r\n        },\r\n        \"100%\": {\r\n            transform: 'translate(0)',\r\n        },\r\n    },\r\n    \"@keyframes slideRight\": {\r\n        \"0%\": {\r\n            transform: 'translate(100%)',\r\n            background: 'lavender'\r\n        },\r\n        \"100%\": {\r\n            transform: 'translate(0)',\r\n        },\r\n    },\r\n    bottomBorder: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        height: '4px',\r\n        width: '100%',\r\n        backgroundColor: '#3f51b5',\r\n    }\r\n}\r\n\r\nexport default styles;","import React, { useState, useEffect, useContext } from 'react'\r\nimport { OptionsContext } from '../context/options.context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport clsx from 'clsx';\r\nimport TabPanel from './TabPanel';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from '../styles/FormStyles'\r\n\r\nconst marks = [\r\n    { value: 1, label: '1°' },\r\n    { value: 2, label: '2°' },\r\n    { value: 3, label: '3°' },\r\n    { value: 4, label: '4°' },\r\n    { value: 5, label: '5°' },\r\n    { value: 6, label: '6°' },\r\n    { value: 7, label: '7°' },\r\n];\r\n\r\nconst Form = ({ classes, showForm, closeForm }) => {\r\n    const { show, tabIndex } = showForm;\r\n    const { maxWrong, changeMaxWrong, name, changeName } = useContext(OptionsContext)\r\n\r\n    //Tabs\r\n    const [value, setValue] = useState();\r\n    //Forms\r\n    const [inputText, setInputText] = useState(name)\r\n    const [sliderValue, setSliderValue] = useState(maxWrong)\r\n\r\n\r\n    const handleTabChange = (evt, newValue) => setValue(newValue)\r\n\r\n    useEffect(() => { setValue(tabIndex) }, [tabIndex])\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        closeForm({ tabIndex: value })\r\n        changeName(inputText)\r\n        changeMaxWrong(sliderValue)\r\n    }\r\n\r\n    const handleTextChange = (evt) => setInputText(evt.target.value)\r\n\r\n    const handleSliderChange = (evt, newValue) => setSliderValue(newValue)\r\n\r\n    const stopPropagation = (evt) => evt.stopPropagation();\r\n\r\n    return (\r\n        <div onClick={() => closeForm({ tabIndex: value })} >\r\n            <Dialog open={show} className={classes.dialog}>\r\n                <Paper square onClick={stopPropagation}>\r\n                    <Tabs\r\n                        value={value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={handleTabChange}\r\n                        aria-label=\"options tabs\"\r\n                    >\r\n                        <Tab className='tab' label=\"Set Name\" />\r\n                        <Tab className='tab' label=\"Set Difficulty\" />\r\n                        <Tab className='tab' label=\" \" disabled />\r\n                    </Tabs>\r\n                </Paper>\r\n                <TabPanel value={value} index={0} >\r\n                    <form\r\n                        className={clsx(classes.form, 'slideLeft')}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        onClick={stopPropagation}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <h1 className={classes.formTitle}>Enter your name</h1>\r\n                        <TextField\r\n                            onChange={handleTextChange}\r\n                            label=\"Player name\"\r\n                            inputRef={input => input && input.focus()}\r\n                            value={inputText}\r\n                        />\r\n                        <div className='btns-container'>\r\n                            <Button\r\n                                color='primary'\r\n                                onClick={() => closeForm({ tabIndex: value })}\r\n                            > Cancel\r\n                            </Button>\r\n                            <Button\r\n                                type='submit'\r\n                                variant=\"contained\"\r\n                                color='primary'>\r\n                                Save Name\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                    <footer className={classes.bottomBorder} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} >\r\n                    <form\r\n                        className={clsx(classes.form, 'slideRight')}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        onClick={stopPropagation}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <h1 className={classes.formTitle}>Number of attemps</h1>\r\n                        <Slider\r\n                            defaultValue={3}\r\n                            aria-labelledby=\"discrete-slider-custom\"\r\n                            step={1}\r\n                            min={1}\r\n                            max={7}\r\n                            valueLabelDisplay=\"auto\"\r\n                            onChange={handleSliderChange}\r\n                            value={sliderValue}\r\n                            marks={marks}\r\n                        />\r\n                        <div className='btns-container'>\r\n                            <Button\r\n                                color='primary'\r\n                                onClick={() => closeForm({ tabIndex: value })}\r\n                            > Cancel\r\n                            </Button>\r\n                            <Button\r\n                                type='submit'\r\n                                variant=\"contained\"\r\n                                color='primary'>\r\n                                Save Name\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                    <footer className={classes.bottomBorder} />\r\n                </TabPanel>\r\n            </Dialog>\r\n        </div >\r\n    )\r\n}\r\nexport default withStyles(styles)(Form);","import sizes from './sizes'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        overflow: 'hidden'\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        '& .player-name': {\r\n            fontSize: '30px',\r\n            '& span': { fontWeight: '400' }\r\n        },\r\n        [sizes.down('lg')]: { paddingLeft: '1rem' },\r\n        '& button': {\r\n            [sizes.down('lg')]: { display: 'none' },\r\n        },\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [sizes.down('lg')]: { width: '100%' },\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        transition: '.45s ease-out',\r\n        transform: 'scale(0,1) translate(150px)',\r\n        marginLeft: '-70px'\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        backgroundColor: 'grey',\r\n        '& > div': {\r\n            backgroundColor: 'rgba(0,0,0,0.5)',\r\n        },\r\n        '& svg': {\r\n            fontSize: '2.7rem',\r\n            color: 'hsl(189, 100%, 60%)',\r\n        },\r\n        '& span': {\r\n            fontSize: '2.1rem',\r\n            fontFamily: 'Segoe UI',\r\n            fontWeight: 300,\r\n            color: 'hsl(189, 100%, 60%)'\r\n        }\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,.5)',\r\n            boxShadow: 'inset 2px 0 2px hsl(189, 100%, 60%)'\r\n        }\r\n    },\r\n    divider: {\r\n        background: 'black',\r\n        boxShadow: '0 1px 1px rgba(255,255,255,.5)'\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [sizes.down('lg')]: {\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(0),\r\n        color: 'white',\r\n        margin: '3.5%',\r\n        width: '75%',\r\n        [sizes.down('xlg')]: { width: '100%' },\r\n        [sizes.down('md')]: { margin: 0 },\r\n    },\r\n});\r\n\r\nexport default styles;","import React, { useState, useContext } from 'react';\r\nimport { OptionsContext } from '../context/options.context';\r\nimport clsx from 'clsx';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Icon7 from '@material-ui/icons/Filter7Outlined';\r\nimport Icon6 from '@material-ui/icons/Looks6Outlined';\r\nimport Icon5 from '@material-ui/icons/Looks5Outlined';\r\nimport Icon4 from '@material-ui/icons/Looks4Outlined';\r\nimport Icon3 from '@material-ui/icons/Looks3Outlined';\r\nimport Icon2 from '@material-ui/icons/LooksTwoOutlined';\r\nimport Icon1 from '@material-ui/icons/LooksOneOutlined';\r\nimport Form from './Form'\r\nimport styles from '../styles/MainDrawerStyles'\r\n\r\nconst MainDrawer = ({ classes, children, changeMaxWrong }) => {\r\n    const theme = useTheme();\r\n    const { maxWrong, name } = useContext(OptionsContext)\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [showForm, setShowForm] = useState({ show: false, tabIndex: 2 })\r\n\r\n    const handleDrawerOpen = () => setOpen(true);\r\n    const handleDrawerClose = () => setOpen(false);\r\n    const handleShowingForm = ({ show = false, tabIndex }) => setShowForm({ show, tabIndex })\r\n\r\n\r\n    const renderNumber = () => (\r\n        (maxWrong === 7) ? <Icon7 />\r\n            : (maxWrong === 6) ? <Icon6 />\r\n                : (maxWrong === 5) ? <Icon5 />\r\n                    : (maxWrong === 4) ? <Icon4 />\r\n                        : (maxWrong === 3) ? <Icon3 />\r\n                            : (maxWrong === 2) ? <Icon2 /> : <Icon1 />\r\n    )\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Form\r\n                showForm={showForm}\r\n                changeDifficulty={changeMaxWrong}\r\n                closeForm={handleShowingForm}\r\n            />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, open && classes.appBarShift)}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <p className='player-name'> Player: <span>{name}</span> </p>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider className={classes.divider} />\r\n                <List >\r\n                    <ListItem button className={classes.listItem} onClick={() => handleShowingForm({ show: true, tabIndex: 0 })}>\r\n                        <ListItemIcon><FaceIcon /></ListItemIcon>\r\n                        <ListItemText primary='Player name' />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.listItem} onClick={() => handleShowingForm({ show: true, tabIndex: 1 })}>\r\n                        <ListItemIcon>\r\n                            {renderNumber()}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Difficulty' />\r\n                    </ListItem>\r\n\r\n                </List>\r\n                <Divider className={classes.divider} />\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles, { widthTheme: true })(MainDrawer)","const strCategory = `car, train, bike, animal, mammal, temperature, astronomy, beach, camping,\r\nclothes, colors, container, driving, family, feelings, fruit, furniture, kings, job,\r\nemployment, kitchen, math, military, money, queens, school, science, sports, vehicle,\r\nvacation, country\r\n`\r\nconst arrCategory = strCategory.split(',').map(el => el.trim())\r\nconst arrConstraint = ['ml', 'topics']\r\n\r\nconst random = (arr) => arr[Math.floor(Math.random() * arr.length)];\r\n\r\n// Generate Guessed Word\r\nconst genGuessedWord = (answer, guessedLetters) => (\r\n    answer.split('').map(letter => guessedLetters.has(letter) ? letter : '_')\r\n)\r\n\r\n// Generate linear-gradient Background\r\nconst genBackground = (arrLength, topSatur, lowSatur) => {\r\n    const randPercArr = Array(arrLength).fill().map((_, idx) => (\r\n        idx * (100 / arrLength) + Math.ceil(Math.random() * (100 / arrLength))\r\n    ))\r\n\r\n    const linearBackground = Array(arrLength).fill().map((_, idx) => {\r\n        const nextPercent = idx % 2 ? randPercArr[idx - 1] : randPercArr[idx]\r\n        // Random saturation from 0 to 100\r\n        const randSaturation = Math.ceil(Math.random() * (topSatur - lowSatur)) + lowSatur\r\n        return `, hsl(210, 8%, ${randSaturation}%) ${nextPercent}%`\r\n    })\r\n\r\n    return `linear-gradient(25deg ${linearBackground.join('')})`\r\n}\r\n\r\nexport { arrCategory, arrConstraint, random, genBackground, genGuessedWord };","const styles = {\r\n    tooltip: {\r\n        backgroundColor: 'rgba(41, 73, 255, 0.8)',\r\n        fontSize: '1.5rem',\r\n        borderRadius: '6px',\r\n        padding: '7px 15px',\r\n        // display: props => props.isDisabled ? 'none' : 'block',\r\n        animation: '$tooltipAppear 1.7s'\r\n    },\r\n    tooltipArrow: {\r\n        color: 'hsla(210, 100%, 60%, .6)',\r\n        animation: '$tooltipArrowUp 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards'\r\n    },\r\n    \"@keyframes tooltipAppear\": {\r\n        \"0%\": {\r\n            background: 'rgba(0,0,0,0)',\r\n            color: 'rgba(0,0,0,0)'\r\n        },\r\n        \"60%\": {\r\n            background: 'rgba(0,0,0,0)',\r\n            color: 'rgba(0,0,0,0)'\r\n        },\r\n    },\r\n    \"@keyframes tooltipArrowUp\": {\r\n        \"0%\": {\r\n            transform: 'translateY(14px)'\r\n        },\r\n    },\r\n}\r\n\r\nexport default styles","import React, { useState } from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from '../styles/TooltipStyles'\r\n\r\nconst CustomTooltip = (props) => {\r\n    const { classes, title, children, isDisabled, ...otherProps } = props;\r\n\r\n    const [tooltipOpen, setTooltipOpen] = useState(false)\r\n    const handleTooltip = bool => setTooltipOpen(bool)\r\n\r\n    return (\r\n        <Tooltip\r\n            onMouseEnter={() => { handleTooltip(true) }}\r\n            onMouseOut={() => { handleTooltip(false) }}\r\n            onClick={() => { handleTooltip(false) }}\r\n            open={isDisabled ? false : tooltipOpen}\r\n            arrow\r\n            title={title}\r\n            placement=\"bottom\"\r\n            classes={{ tooltip: classes.tooltip, arrow: classes.tooltipArrow }}\r\n            {...otherProps}\r\n        >{children}\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nCustomTooltip.defaultProps = {\r\n    isDisabled: false\r\n}\r\n\r\nexport default withStyles(styles)(CustomTooltip);","import { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nconst useHeightAnimHook = (fetchedData, isWinner, lostGame) => {\r\n    const [height, setHeight] = useState(90)\r\n    const ref = useRef(null)\r\n\r\n    // Update height if (fetchedData, isWinner, lostGame)\r\n    useEffect(() => {\r\n        setHeight(ref.current.scrollHeight + 70)\r\n    }, [fetchedData, isWinner, lostGame])\r\n    return [height, ref]\r\n}\r\n\r\nexport default useHeightAnimHook","import sizes from './sizes'\r\n\r\nconst styles = {\r\n    root: {\r\n        margin: '0 auto',\r\n    },\r\n    mainContainer: {\r\n        borderRadius: '25px',\r\n        boxShadow: '4px 4px 6px 2px black',\r\n        border: '2px solid white',\r\n        overflow: 'hidden',\r\n        [sizes.down('md')]: {\r\n            boxShadow: 'inset 1px 1px 2px 1px black',\r\n            borderRadius: 0,\r\n            border: 'none',\r\n        },\r\n        transition: '1s height',\r\n        '& .centeredSection': {\r\n            textAlign: 'center',\r\n            maxWidth: '75rem',\r\n            marginBottom: '2rem',\r\n            '& br': {\r\n                [sizes.down('xs')]: { display: 'none' },\r\n            },\r\n            '& .guessedWord': {\r\n                letterSpacing: '2rem',\r\n                textTransform: 'uppercase',\r\n                marginTop: '3.5rem',\r\n                marginBottom: '2rem',\r\n                fontFamily: 'Montserrat',\r\n                fontWeight: '300'\r\n            }\r\n        }\r\n    },\r\n    headerContainer: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n        width: '100%',\r\n        height: '7rem',\r\n        padding: '0 4rem',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        '& h1': {\r\n            fontFamily: 'Montserrat, Segoe UI',\r\n            fontSize: '3.3rem',\r\n            fontWeight: 400,\r\n            color: 'hsl(200, 100%, 75%)',\r\n            textShadow: '1px 1px black',\r\n        },\r\n        '& p': {\r\n            textAlign: 'right',\r\n            fontSize: '2.5rem',\r\n            color: 'hsl(210, 100%, 80%)',\r\n            '& span:first-child': {\r\n                [sizes.down('xs')]: { display: 'none' },\r\n            },\r\n            '& span:last-child': {\r\n                marginLeft: '1rem',\r\n                fontSize: '2.6rem',\r\n                fontWeight: 400\r\n            }\r\n        },\r\n        [sizes.up('md')]: {\r\n            boxShadow: 'inset 1px 1px 4px black, inset 0 0 1px 2px white',\r\n        },\r\n    },\r\n    main: {\r\n        [sizes.up('md')]: {\r\n            boxShadow: 'inset 1px 1px 4px black, inset 0 -1px 1px 2px white',\r\n        },\r\n        fontSize: '2.1rem',\r\n        color: 'hsl(210, 100%, 96%)',\r\n        textShadow: '1px 1px 1px black, 1px 1px 1px black',\r\n        padding: '1.3rem 3rem 3rem 5rem',\r\n        [sizes.down('md')]: { padding: '1.7rem', },\r\n        '& p': {\r\n            margin: '0.9rem',\r\n        },\r\n        '& input': {\r\n            color: 'white',\r\n            borderRadius: '9px',\r\n            fontSize: '2rem',\r\n            paddingLeft: '2rem',\r\n            width: '12rem',\r\n            boxShadow: 'inset 3px 3px 3px black, 1px 1px 2px 1px black',\r\n            textTransform: 'uppercase',\r\n            border: '1px solid hsl(210, 100%, 90%)',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            fontSize: '2rem',\r\n        },\r\n        '& strong': {\r\n            fontWeight: 400\r\n        },\r\n        '& hr': {\r\n            borderColor: 'rgba(255,255,255,.7)',\r\n            height: '4px',\r\n            borderRadius: '50px',\r\n            background: 'black',\r\n            boxShadow: 'inset 0 1px 1px white',\r\n        }\r\n    },\r\n    textField: {\r\n        '& label.Mui-focused': {\r\n            color: 'hsl(210, 100%, 90%)',\r\n        },\r\n        '& .MuiFilledInput-underline:before': {\r\n            borderRadius: '9px',\r\n            width: '95%',\r\n            margin: '0 auto',\r\n        },\r\n        '& .MuiFilledInput-underline:hover:before': {\r\n            borderBottomColor: 'rgba(255,255,255,0.9)',\r\n        },\r\n        '& .MuiFilledInput-underline:after': {\r\n            borderBottom: '2px solid hsl(215, 100%, 60%)',\r\n            width: '93%',\r\n            margin: '0 auto',\r\n        },\r\n    },\r\n\r\n    buttonsContainer: {\r\n        maxWidth: '75rem',\r\n        textAlign: 'center',\r\n        '& .btn-next': {\r\n            margin: '1rem 4rem'\r\n        },\r\n        '& button': {\r\n            fontSize: '2rem',\r\n            fontWeight: 100,\r\n            padding: '7px 20px',\r\n            letterSpacing: '2px',\r\n            backgroundColor: '#3f51b5',\r\n            color: 'white',\r\n            borderRadius: '5px',\r\n            outline: 'none',\r\n            border: 'none',\r\n            margin: '3px',\r\n            transform: 'skew(-15deg) rotate(-0deg)',\r\n            boxShadow: '1px 1px 1px aqua, 0 0 1px 1px rgba(255,255,255,.9), 2px 2px 3px 1px black',\r\n            cursor: 'pointer',\r\n            transition: '0.1s',\r\n            '&:disabled': {\r\n                background: 'rgba(0,0,0,.1)',\r\n            },\r\n            '&:disabled:hover': {\r\n                transform: 'skew(-15deg) rotate(-0deg)',\r\n                cursor: 'default',\r\n                boxShadow: '1px 1px 1px 0px aqua, 0 1px 2px 1px white, inset 0px 0px 1px aqua, 3px 3px 4px 1px black',\r\n                textShadow: '1px 1px #1f36b4, 1px 1px 1px aqua, 1px 1px 3px aqua',\r\n            },\r\n            '&:hover': {\r\n                transform: 'skew(-31deg) rotateY(25deg) rotateX(20deg) scale(1.01)',\r\n                boxShadow: '1px 1px 0 1px aqua, inset -1px -1px 2px aqua',\r\n                color: 'rgb(190, 255, 255)',\r\n                textShadow: '1px 1px #1f36b4, 1px 1px 1px aqua',\r\n            },\r\n        },\r\n    },\r\n    message: {\r\n        padding: '10px',\r\n        marginBottom: '0.5rem',\r\n        '& span': { fontStyle: 'italic' },\r\n        '& .win-msg': {\r\n            fontSize: '3.1rem',\r\n            fontWeight: '600',\r\n            marginLeft: '0.6rem'\r\n        },\r\n        '& .lose-msg': {\r\n            display: 'inline',\r\n            '& > span': {\r\n                fontSize: '3rem',\r\n                marginLeft: '0.5rem',\r\n            },\r\n            '& .correct-answer': {\r\n                fontSize: '2rem',\r\n                marginLeft: '10rem',\r\n                '& span': {\r\n                    fontWeight: '600',\r\n                    letterSpacing: '3px'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    definitionsAtEndGame: {\r\n        marginTop: '3rem',\r\n        '& > p': {\r\n            fontWeight: 400\r\n        }\r\n    }\r\n}\r\n\r\nexport default styles;","import React, { useState, useEffect, useContext } from 'react'\r\nimport { OptionsContext } from '../context/options.context';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Buttons from '../components/Buttons'\r\nimport MainDrawer from '../components/MainDrawer'\r\nimport { arrCategory, arrConstraint, random, genBackground, genGuessedWord } from \"../utils\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CustomTooltip from '../components/Tooltip'\r\nimport useHeightAnimHook from '../hooks/useHeightAnimHook';\r\nimport styles from '../styles/GameScreenStyles'\r\n\r\n\r\nconst GameScreen = ({ classes }) => {\r\n    const { maxWrong } = useContext(OptionsContext)\r\n    const [nWrong, setNWrong] = useState(0)\r\n    const [guessedLtr, setGuessedLtr] = useState(new Set())\r\n    const [isWinner, setIsWinner] = useState(false)\r\n    const [lostGame, setLostGame] = useState(false)\r\n\r\n    // genBackground(numOfStripes, minSaturation, maxSaturation)\r\n    const [background, setBackground] = useState(genBackground(8, 20, 35))\r\n\r\n    const [hint, setHint] = useState({\r\n        msg: \" Click 'Left', 'Right' or 'Hint' button to display more messages. Hover over each button to get more information.\",\r\n        disabled: { left: false, syllables: false, right: false }\r\n    })\r\n\r\n    const [fetchedData, setFetchedData] = useState({\r\n        answer: '',\r\n        constraint: 'null',\r\n        category: 'null',\r\n        tags: 'part-of-speech',\r\n        def: '-',\r\n        numSyllables: 0\r\n    })\r\n\r\n    // Destructure (fetchedData & hint) objects\r\n    const { answer, constraint, category, tags, def, numSyllables } = fetchedData;\r\n    const { msg, disabled } = hint;\r\n\r\n    // Get height based on main content, updated at (fetchedData, isWinner, lostGame)\r\n    const [height, ref] = useHeightAnimHook(fetchedData, isWinner, lostGame)\r\n\r\n\r\n    // Fetch data at start and restart of the game\r\n    // - additional fetch is needed to get 'left hint', 'right hint' (for more information look at fetchHint function)\r\n    const getData = () => {\r\n        let constraint = random(arrConstraint);\r\n        let category = random(arrCategory);\r\n        return fetch(`https://api.datamuse.com/words?${constraint}=${category}&max=30&md=dps`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let rand;\r\n                do {\r\n                    rand = random(data)\r\n                } while (rand.word.length < 5 || rand.word.length > 16)\r\n\r\n                let tags = rand.tags.join(', ');\r\n                let def = rand.defs || ['no definition is available, try to guess it anyway!'];\r\n\r\n                setFetchedData({\r\n                    answer: rand.word,\r\n                    numSyllables: rand.numSyllables,\r\n                    constraint, category, tags, def,\r\n                })\r\n            }).catch((err) => console.log('ERROR!', err))\r\n    }\r\n\r\n    // Compare guessed letters to answer, e.g. gu_ss_dWord\r\n    const guessedWord = genGuessedWord(answer, guessedLtr)\r\n\r\n    useEffect(() => {\r\n        if (answer) {\r\n            // Set the game to be lost or won depending on met conditions\r\n            if (guessedWord.join('') === answer) setIsWinner(true)\r\n            else if (nWrong >= maxWrong) setLostGame(true)\r\n            // Fetch data at the start of the game\r\n        } else getData()\r\n    }, [answer, guessedWord, guessedLtr, nWrong, maxWrong])\r\n\r\n\r\n    // Fething hints (most common words appearing to the left or right of the target word).\r\n    // - data cannot be taken from initial fetch\r\n    const fetchHint = (direction, max) => {\r\n        // max - fetch no more than top (max) results e.g. fetch no more than 20 first results\r\n        const context = (direction === 'left') ? 'rc' : 'lc';\r\n        fetch(`https://api.datamuse.com/words?${context}=${answer}&max=${max}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data, random(data));\r\n                const nums = new Set();\r\n                let count = 0;\r\n                do {\r\n                    let randWord = random(data).word\r\n                    if (randWord.length > 4) {\r\n                        nums.add(randWord)\r\n                    }\r\n                    count++;\r\n                } while (nums.size < 4 && count < max)\r\n                const updatedDisabled = { ...disabled, [direction]: true }\r\n                setHint({\r\n                    disabled: updatedDisabled,\r\n                    msg: `to the ${direction.toUpperCase()}: ${Array.from(nums).join(', ')}`\r\n                })\r\n            })\r\n    }\r\n\r\n    // Handle presssing LEFT ARROW or 'Left' button (fetch random hint taken from top 20 results)\r\n    const handleLeft = () => fetchHint('left', 20)\r\n    // Handle presssing RIGHT ARROW or 'Right' button (fetch random hint taken from top 20 results)\r\n    const handleRight = () => fetchHint('right', 20)\r\n\r\n    // Handle pressing 'Syllables' button\r\n    const handleSyllables = () => {\r\n        const updatedDisabled = { ...disabled, syllables: true }\r\n        setHint({\r\n            disabled: updatedDisabled,\r\n            msg: `number of syllables is ${numSyllables}`\r\n        })\r\n    }\r\n\r\n\r\n    const updateStateOnEvent = (letter) => {\r\n        if (!lostGame && !isWinner) {\r\n            setGuessedLtr(prevSt => new Set(prevSt.add(letter)))\r\n            setNWrong(nWrong + (answer.includes(letter) ? 0 : 1))\r\n        }\r\n    }\r\n\r\n    // Handle mouse events\r\n    const handleGuessClick = (evt) => {\r\n        let letter = evt.target.value;\r\n        updateStateOnEvent(letter)\r\n    }\r\n\r\n    // Handle key events \r\n    // - letters update game state\r\n    // - LEFT & RIGHT arrows fetch the hints\r\n    const handleGuessKey = (evt) => {\r\n        if (evt.key === 'ArrowLeft') !disabled.left && handleLeft()\r\n        else if (evt.key === 'ArrowRight') !disabled.right && handleRight()\r\n        else {\r\n            let letter = evt.key;\r\n            if (!guessedLtr.has(letter)) updateStateOnEvent(letter)\r\n            setTimeout(() => evt.target.value = \"\", 150)\r\n        }\r\n    }\r\n\r\n\r\n    // Reset values at restart (next game)\r\n    const handleRestart = () => {\r\n        getData()\r\n        setNWrong(0)\r\n        setGuessedLtr(new Set())\r\n        setIsWinner(false)\r\n        setLostGame(false)\r\n        setBackground(genBackground(8, 20, 35))\r\n        setHint({\r\n            msg: 'there is no message for you.',\r\n            disabled: { left: false, syllables: false, right: false }\r\n        })\r\n    }\r\n\r\n    // Render message at the end of the game (depending if player lost or won)\r\n    const endResult = () => {\r\n        if (isWinner) {\r\n            return (\r\n                <span className='win-msg'> You win !! </span>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='lose-msg'>\r\n                    <span> You lose !! </span>\r\n                    <p className='correct-answer'>The correct answer is:\r\n                        <span> {answer.toUpperCase()}</span>\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Render definitions at the end of the game (if available)\r\n    const definitions = () => {\r\n        if (def && def.length > 1 && (isWinner || lostGame)) {\r\n            const allDefinitions = def.map((el, i) => <p key={i}>{i + 1}.  {el}</p>)\r\n\r\n            return (\r\n                <section className={classes.definitionsAtEndGame}>\r\n                    <hr />\r\n                    <p>More definitions of {answer}:</p>\r\n                    <div>{allDefinitions}</div>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Capitalize constraints (relate, topics) -> (Relate, Topics)\r\n    let capitalizedConstraint = constraint.charAt(0).toUpperCase() + constraint.slice(1);\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <MainDrawer>\r\n                {/* Height from useHeightAnimHook. Background from genBackground() */}\r\n                <div className={classes.mainContainer} style={{ background, height }} >\r\n                    <header className={classes.headerContainer}>\r\n                        <h1 className='title'>Guess The Word</h1>\r\n                        <p>Guessed <span>wrong</span>:\r\n                            <span>{`${nWrong} / ${maxWrong}`}</span>\r\n                        </p>\r\n                    </header>\r\n                    {/* ref from useHeightAnimHook (used to determine height of the content ) */}\r\n                    <div ref={ref} className={classes.main}>\r\n\r\n                        <section>\r\n                            <p className='category'>\r\n                                {constraint === 'ml' ?\r\n                                    <strong>Relate</strong> : <strong>{capitalizedConstraint}</strong>}: {category.toUpperCase()} ({tags})\r\n                            </p>\r\n\r\n                            {/* {Restrain for too long defitions} */}\r\n                            {def[0].length < 2000 ? def[0] : def[0].substring(0, 2000) + '...'}\r\n                        </section>\r\n\r\n                        <section className='centeredSection'>\r\n                            <Buttons guessed={guessedLtr} handleGuess={handleGuessClick} answer={answer} isWinner={isWinner} />\r\n                            <p className='guessedWord'>{guessedWord}</p>\r\n                            <TextField id=\"filled-basic\" label=\"Type a letter\" variant=\"filled\"\r\n                                classes={{ root: classes.textField }}\r\n                                onKeyDown={handleGuessKey} autoComplete='off'\r\n                                placeholder={!guessedLtr.size ? '' : [...guessedLtr].pop()}\r\n                            />\r\n                        </section>\r\n\r\n                        <section>\r\n                            <div className={classes.message}><strong>Message:</strong>\r\n                                {(lostGame || isWinner) ?\r\n                                    endResult() : <span> {msg} </span>\r\n                                }\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section\r\n                            className={classes.buttonsContainer}>\r\n                            <CustomTooltip title='Common words that appear immediately to the left of the target word' isDisabled={isWinner || lostGame || disabled.left}>\r\n                                <span><button onClick={handleLeft} disabled={isWinner || lostGame || disabled.left}>&#8636; Left</button></span>\r\n                            </CustomTooltip>\r\n                            <CustomTooltip title='Show number of syllables' isDisabled={isWinner || lostGame || disabled.syllables}>\r\n                                <span><button onClick={handleSyllables} disabled={isWinner || lostGame || disabled.syllables}>Syllables</button></span>\r\n                            </CustomTooltip>\r\n                            <CustomTooltip title='Common words that appear immediately to the right of the target word' isDisabled={isWinner || lostGame || disabled.right}>\r\n                                <span><button onClick={handleRight} disabled={isWinner || lostGame || disabled.right}>Right &#8640;</button></span>\r\n                            </CustomTooltip>\r\n                            <button className='btn-next' onClick={handleRestart}>\r\n                                Next</button>\r\n                        </section>\r\n                        {definitions()}\r\n                    </div>\r\n                </div>\r\n            </MainDrawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(GameScreen);\r\n","import './App.css';\r\nimport StartScreen from './screens/StartScreen';\r\nimport GameScreen from './screens/GameScreen';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { OptionsProvider } from './context/options.context'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <OptionsProvider>\r\n        <Switch>\r\n          <Route exact path='/' component={StartScreen} />\r\n          <Route exact path='/game' component={GameScreen} />\r\n        </Switch>\r\n      </OptionsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { HashRouter as Router } from 'react-router-dom';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Router basename='/'>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}